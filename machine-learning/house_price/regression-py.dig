_export:
  !include : config/params.yml
  td:
    database: ${dbname}
    engine: hive

  target_table: house_prices_training
  suffix: ""

+prepare:
  +shuffle:
    td>: queries/shuffle.sql
    create_table: ${source}_shuffled

  +split:
    _parallel: true

    +training:
      td>: queries/split_train.sql
      #engine: presto
      create_table: ${source}_training

    +test:
      td>: queries/split_test.sql
      #engine: presto
      create_table: ${source}_test

  +vectorize:
    py>: tasks.FeatureSelector.run
    docker:
      image: 'python:3.6.5'
    _env:
      TD_API_KEY: ${secret:apikey}
      TD_API_SERVER: ${secret:endpoint}
      source_table: ${source}


+train:
  td>: queries/train_regressor.sql
  create_table: regressor${suffix}

+predict:
  td>: queries/predict_regressor.sql
  create_table: predictions${suffix}

+evaluate:
  td>: queries/evaluate.sql
  store_last_results: true

+show_accuracy:
  echo>: "Accuracy for eta0: ${eta0} RMSE: ${td.last_results.rmse}, MAE: ${td.last_results.mae}"


## For hyper parameter tuning, you can `for_each>:` as follows:
# +parameter_tuning:
#   for_each>:
#     eta0: [5.0, 1.0, 0.5, 0.1, 0.05, 0.01, 0.001]

#   _parallel: true
  
#   _do:
#     +train:
#       td>: queries/train_regressor.sql
#       suffix: _${eta0.toString().replace('.', '_')}
#       create_table: regressor${suffix}
      
#     +predict:
#       td>: queries/predict_regressor.sql
#       suffix: _${eta0.toString().replace('.', '_')}
#       create_table: predictions${suffix}

#     +evaluate:
#       td>: queries/evaluate.sql
#       suffix: _${eta0.toString().replace('.', '_')}
#       store_last_results: true

#     +show_accuracy:
#       echo>: "Accuracy for eta0: ${eta0} RMSE: ${td.last_results.rmse}, MAE: ${td.last_results.mae}"
