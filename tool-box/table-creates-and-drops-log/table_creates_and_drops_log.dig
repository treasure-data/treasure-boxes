_export:
  td:
# List the database where you would like your create/drop table to live.
    database: recent_change_logs
# Set a lookback window in days. This will look at changes over this time range measured from 00:00 of run date.
  lookback_range_days: 7
# Set how many days should be counted towards meeting the anomaly_threashold. If there are workflows that drop/create
# on a weekly bases this threashold should be set longer than seven days.
  anomaly_range_days: 60
  anomaly_threashold: 2
# If you would like your change log to create a google sheet listing the changes, add the google sheet ID and your 
# Treasure Data connection name here. If not simply add a '#' in front of the next two lines to save for later option.
  google_sheet_id: 123456_googlesheetID_54321
  google_sheet_connection_name: your_google_sheets_connection
# Include each email address you would like to recieve the notification of table creates/drops, seperate with commas.
  mailing_list: max.king@treasure-data.com
# Using regex, list any databases you would like to exclude from analysis. Use one line for each as shown in the example.
# If you do not wish to exclude any tables simply enter [] immediatly after the collon.
  exclude_databases:
    - .{0,}database_contains.{0,}
    - database_name_is
# Using regex, list any tables you would like to exclude from analysis. Use one line for each as shown in the example.
# This paramater will be based on full database.table_names. (i.e. to exclude all tables in every database called 
# 'pageviews' use '.{1,}\.pageviews'
# If you do not wish to exclude any tables simply enter [] immediatly after the collon.
  exclude_tables:
    - .{1,}\.table_name_in_any_database
    - database_name.specific_table

# Creates a log table in the database selected above containing all records of tables being created/droped over the 
# anomaly range when there are fewer than or exactly ${anomaly_threashold} actions of the same type.
+create_table_of_only_anomalous_creates_and_drops_within_anomaly_range:
  +initialize:
    td_ddl>:
    create_tables: ["${td.database}.counts_of_table_drops_and_creates_last_${anomaly_range_days}_days"]
    empty_tables: ["${td.database}.counts_of_table_drops_and_creates_last_${anomaly_range_days}_days"]
  +add_data:
    td>: sql/count_of_only_anomalous_creates_and_drops.sql
    insert_into: ${td.database}.counts_of_table_drops_and_creates_last_${anomaly_range_days}_days

# If there are anomalous records returned in the query above they will be filtered for having occured in the last
# ${lookback_range_days} days. If they are they each event and each table will be loged. If not an email will be sent
# with notification that no anomalies were detected.
+detect_anomaliess_within_look_back_and_send_email:
  +count_anomalies:
#Checks for records in the table created above within the last ${lookback_range_days} days.
    td>:
    query: |
      SELECT COUNT(*) AS count_of_anomalies
      FROM ${td.database}.counts_of_table_drops_and_creates_last_${anomaly_range_days}_days
      WHERE 
        (event_name LIKE 'table_create' OR event_name LIKE 'table_delete') 
         AND time > TO_UNIXTIME(date_trunc('day',now()))-(86400*${lookback_range_days})
    store_last_results: true
# If there are records within the last ${lookback_range_days} days, then do these steps.
# Log each action that was recognized as anomalous and add to a new table to aid investigation. This log will include 
# the user_email and audit ID associated with all creates and drops logged.
  +only_continue_if_count_greater_than_zero:
    if>: ${td.last_results.count_of_anomalies > 0}
    _do:
      +create_tables_of_anomalous_creates_and_drops_within_lookback_range:
        +initialize:
         td_ddl>:
          create_tables: ["${td.database}.actions_anomalous_table_drops_and_creates_last_${lookback_range_days}_days"]
          empty_tables: ["${td.database}.actions_anomalous_table_drops_and_creates_last_${lookback_range_days}_days"]
        +add_data:
          td>: sql/anomalous_creates_and_drops_within_lookback.sql
          insert_into: ${td.database}.actions_anomalous_table_drops_and_creates_last_${lookback_range_days}_days

# The next step will reduce the number of records by grouping by event and table (resource_name) for higher level view 
# of which tables had unexpected changes.
      +log_anomalous_tables:
        +initialize:
          td_ddl>:
          create_tables: ["${td.database}.tables_anomalous_table_drops_and_creates_last_${lookback_range_days}_days"]
          empty_tables: ["${td.database}.tables_anomalous_table_drops_and_creates_last_${lookback_range_days}_days"]
        +add_data:
          td>: sql/tables_with_anomalous_creates_and_deletes.sql
          insert_into: ${td.database}.tables_anomalous_table_drops_and_creates_last_${lookback_range_days}_days

# Replaces the google sheet listing all recent drops/creates for easy sorting, filtering and investigation. If you are 
# opting out of this section add a '#' before each line to save it for later option.    
      +create_google_sheet_of_anomalous_actions:
       td>:
       query: |
         SELECT *
         FROM ${td.database}.actions_anomalous_table_drops_and_creates_last_${lookback_range_days}_days 
       result_connection: ${google_sheet_connection_name}
       result_settings:
         spreadsheet_id: ${google_sheet_id}
         mode: replace

# Query below uses ARRAY_JOIN(ARRAY_AGG()) and CONCAT to create html formated versions of the records from the
# ${td.database}.tables_anomalous_table_drops_and_creates_last_${lookback_range_days}_days table we just created
# to be embeded in the html email file. This will let you see the anomalous tables in a quick view from email.
      +generate_html_tables_for_email:
        td>: sql/generate_html_tables.sql
        store_last_results: true

# Sends email to list provided in variables. Be sure to attach the html file by the same name listed below in mail>: to
# this workflow.
      +send_email_anomalies_detected:  
        mail>: html/email_body.html
        subject: Tables have been created/dropped in the last ${lookback_range_days} days
        to: ${mailing_list}
        html: true

# If there are NO records within the last ${lookback_range_days} days, then send an email to the group to let them know.
    _else_do:
     +send_email_no_anomalies_detected:
      mail>:
        data: Your table create and drop log Workflow ran successfully. No anomalous table creates/drops have been detected. Thank you for using Treasure Data.
      subject: No anomalous table creates/dropps in the last ${lookback_range_days} days
      to: ${mailing_list}