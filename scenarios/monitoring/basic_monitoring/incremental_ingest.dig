_export:
    !include : common/settings.yaml
    
timezone: UTC
schedule:
  daily>: 00:00:00

+increment_ingest_connection:
    +append_connection_history:
        td>: 
        query: select * from ${td.tables.connections}
        database: ${td.database}
        insert_into: ${td.tables.connections_history}
    +ingest_connection:
        py>: scripts.ingest_connection.run
        dest_db: ${td.database}
        dest_table: ${td.tables.connections}
        api_endpoint: ${td.api_endpoint}
        docker:
            image: "digdag/digdag-python:3.9"
        _env:
            TD_API_KEY: ${secret:td.apikey}

+increment_ingest_schedule:
    +append_schedule_history:
        td>: 
        query: select * from ${td.tables.schedules}
        database: ${td.database}
        insert_into: ${td.tables.schedules_history}
    +ingest_schedule:
        py>: scripts.ingest_schedule.run
        dest_db: ${td.database}
        dest_table: ${td.tables.schedules}
        api_endpoint: ${td.api_endpoint}
        docker:
            image: "digdag/digdag-python:3.9"
        _env:
            TD_API_KEY: ${secret:td.apikey}

+increment_ingest_jobs:
    +check_old_running_jobs:
        td>: 
        query: select ARRAY_JOIN(ARRAY_AGG(job_id), ',') as ids from ${td.tables.jobs} where status = 'running' and TD_TIME_RANGE(time, '${moment(session_date).add(-3).format("YYYY-MM-DD")}', NULL) group by status
        store_last_results: true
        database: ${td.database}
    +debug1:
        echo>: ${td.last_results}
    +update_old_running_job:
        py>: scripts.update_job.run
        session_unixtime: ${session_unixtime}
        dest_db: ${td.database}
        dest_table: ${td.tables.jobs}
        ids: ${td.last_results.ids}
        api_endpoint: ${td.api_endpoint}
        docker:
            image: "digdag/digdag-python:3.9"
        _env:
            TD_API_KEY: ${secret:td.apikey}
    +check_max_job_id:
        td>: 
        query: select max(cast(job_id as INTEGER)) as max_id from ${td.tables.jobs}
        store_last_results: true
        database: ${td.database}
    +debug2:
        echo>: ${td.last_results}
    +ingest_incremental_jobs:
        py>: scripts.ingest_job.run
        session_unixtime: ${session_unixtime}
        dest_db: ${td.database}
        dest_table: ${td.tables.jobs}
        page_size: 1000
        lower_job_id: ${td.last_results.max_id}
        api_endpoint: ${td.api_endpoint}
        if_exists: 'append'
        docker:
            image: "digdag/digdag-python:3.9"
        _env:
            TD_API_KEY: ${secret:td.apikey}
